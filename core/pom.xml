<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.fao.unredd</groupId>
		<artifactId>core-root</artifactId>
		<version>6.0-SNAPSHOT</version>
	</parent>
	<name>geoladris core</name>
	<artifactId>core</artifactId>

	<properties>
		<jasmine.version>2.1</jasmine.version>
		<saga.version>1.5.5</saga.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
			<version>4.8.2</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier>
		</dependency>
		<dependency>
			<groupId>net.tanesha.recaptcha4j</groupId>
			<artifactId>recaptcha4j</artifactId>
			<version>0.0.7</version>
		</dependency>
		<!-- J2EE -->
		<!-- <dependency> -->
		<!-- <groupId>javax.servlet</groupId> -->
		<!-- <artifactId>javax.servlet-api</artifactId> -->
		<!-- <version>3.0.1</version> -->
		<!-- <scope>provided</scope> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<!-- Logging: log4j and slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.6</version>
		</dependency>
		<dependency>
			<groupId>org.fao.unredd</groupId>
			<artifactId>jwebclient-analyzer</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>de.csgis.commons</groupId>
			<artifactId>lib-json</artifactId>
			<version>1.0.1</version>
		</dependency>
		<!-- Database -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.4.1212.jre7</version>
		</dependency>

	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>js</directory>
				<targetPath>geoladris/${project.artifactId}</targetPath>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>com.github.klieber</groupId>
				<artifactId>phantomjs-maven-plugin</artifactId>
				<version>0.7</version>
				<executions>
					<execution>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<version>1.9.7</version>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>${jasmine.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<!-- keep the configuration out of the execution so that the bdd goal
					has access to it -->
				<configuration>
					<jsSrcDir>js/modules</jsSrcDir>
					<jsTestSrcDir>test/tests/</jsTestSrcDir>
					<webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName>
					<webDriverCapabilities>
						<capability>
							<name>phantomjs.binary.path</name>
							<value>${phantomjs.binary}</value>
						</capability>
					</webDriverCapabilities>
					<haltOnFailure>true</haltOnFailure>
					<additionalContexts>
						<context>
							<contextRoot>/modules</contextRoot>
							<directory>${project.basedir}/js/modules</directory>
						</context>
						<context>
							<contextRoot>/jslib</contextRoot>
							<directory>${project.basedir}/js/jslib</directory>
						</context>
						<context>
							<contextRoot>/test-jslib</contextRoot>
							<directory>${project.basedir}/test/jslib</directory>
						</context>
					</additionalContexts>
					<preloadSources>
						<source>/jslib/jquery.min.js</source>
						<source>/jslib/require.js</source>
					</preloadSources>
					<customRunnerTemplate>test/SpecRunner.html</customRunnerTemplate>
					<specIncludes>
						<include>*.js</include>
					</specIncludes>
					<sourceIncludes>
						<include>*.js</include>
					</sourceIncludes>
					<keepServerAlive>true</keepServerAlive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.timurstrekalov</groupId>
				<artifactId>saga-maven-plugin</artifactId>
				<version>${saga.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>coverage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>src/*.js</includes>
					<baseDir>http://localhost:${jasmine.serverPort}</baseDir>
					<outputDir>${project.build.directory}/coverage</outputDir>
					<noInstrumentPatterns>
						<pattern>.*/spec/.*</pattern>
						<pattern>.*/webjars/.*</pattern>
						<pattern>.*/classpath/.*</pattern>

						<pattern>.*/test-jslib/.*</pattern>
						<pattern>.*/modules/.*</pattern>
						<pattern>.*/jslib/.*</pattern>
					</noInstrumentPatterns>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.github.klieber
										</groupId>
										<artifactId>
											phantomjs-maven-plugin
										</artifactId>
										<versionRange>
											[0.7,)
										</versionRange>
										<goals>
											<goal>install</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
